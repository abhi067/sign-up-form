{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adarsh\\\\Downloads\\\\signup\\\\src\\\\SignUpForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUpForm = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [emailValid, setEmailValid] = useState(false);\n  const [passwordValid, setPasswordValid] = useState(false);\n  const [confirmPasswordValid, setConfirmPasswordValid] = useState(false);\n  const validateEmail = input => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    setEmailValid(emailRegex.test(input));\n  };\n  const validatePassword = input => {\n    setPasswordValid(input.length >= 8);\n  };\n  const validateConfirmPassword = input => {\n    setConfirmPasswordValid(input === password);\n  };\n  const handleSubmit = () => {\n    if (emailValid && passwordValid && confirmPasswordValid) {\n      alert('Form submitted successfully');\n    } else {\n      alert(\"Can't submit the form\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => {\n          setEmail(e.target.value);\n          validateEmail(e.target.value);\n        },\n        style: {\n          border: emailValid ? '2px solid green' : '2px solid red'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), !emailValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"invlid email format\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => {\n          setPassword(e.target.value);\n          validatePassword(e.target.value);\n        },\n        style: {\n          border: passwordValid ? '2px solid green' : '2px solid red'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), !passwordValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Password must be at least 8 characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Confirm Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: confirmPassword,\n        onChange: e => {\n          setConfirmPassword(e.target.value);\n          validateConfirmPassword(e.target.value);\n        },\n        style: {\n          border: confirmPasswordValid ? '2px solid green' : '2px solid red'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), !confirmPasswordValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Passwords do not match\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUpForm, \"YWCKcXy1Y3EZMCokc/+UZDLhCGw=\");\n_c = SignUpForm;\nexport default SignUpForm;\nvar _c;\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SignUpForm","_s","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","emailValid","setEmailValid","passwordValid","setPasswordValid","confirmPasswordValid","setConfirmPasswordValid","validateEmail","input","emailRegex","test","validatePassword","length","validateConfirmPassword","handleSubmit","alert","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","style","border","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Adarsh/Downloads/signup/src/SignUpForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst SignUpForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const [emailValid, setEmailValid] = useState(false);\n  const [passwordValid, setPasswordValid] = useState(false);\n  const [confirmPasswordValid, setConfirmPasswordValid] = useState(false);\n\n  const validateEmail = (input) => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    setEmailValid(emailRegex.test(input));\n  };\n\n  const validatePassword = (input) => {\n    setPasswordValid(input.length >= 8);\n  };\n\n  const validateConfirmPassword = (input) => {\n    setConfirmPasswordValid(input === password);\n  };\n\n  const handleSubmit = () => {\n    if (emailValid && passwordValid && confirmPasswordValid) {\n      alert('Form submitted successfully');\n    } else {\n      alert(\"Can't submit the form\");\n    }\n  };\n\n  return (\n    <div>\n      <div className='input-section'>\n        <label>Email:</label><br/>\n        <input\n          type=\"email\"\n          value={email}\n          onChange={(e) => {\n            setEmail(e.target.value);\n            validateEmail(e.target.value);\n          }}\n          style={{ border: emailValid ? '2px solid green' : '2px solid red' }}\n        />\n        {!emailValid && <p>invlid email format</p>}\n      </div>\n      <div className='input-section'>\n        <label>Password:</label><br/>\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => {\n            setPassword(e.target.value);\n            validatePassword(e.target.value);\n          }}\n          style={{\n            border: passwordValid ? '2px solid green' : '2px solid red',\n          }}\n        />\n        {!passwordValid && <p>Password must be at least 8 characters</p>}\n      </div>\n      <div className='input-section'>\n        <label>Confirm Password:</label><br/>\n        <input\n          type=\"password\"\n          value={confirmPassword}\n          onChange={(e) => {\n            setConfirmPassword(e.target.value);\n            validateConfirmPassword(e.target.value);\n          }}\n          style={{\n            border: confirmPasswordValid ? '2px solid green' : '2px solid red',\n          }}\n        />\n        {!confirmPasswordValid && <p>Passwords do not match</p>}\n      </div>\n      <button onClick={handleSubmit}>Submit</button>\n    </div>\n  );\n};\n\nexport default SignUpForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}